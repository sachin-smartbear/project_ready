<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project xmlns:con="http://eviware.com/soapui/config" id="0e3a1871-4d1b-4958-95aa-8b6de18d34d7" created="3.50.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="CC31538-JMS-Config-VS-Issue" resourceRoot="" projectVersion="" updated="3.54.0-SNAPSHOT" compositeProjectFormat="1.3">
  <con:settings>
    <con:setting id="0e3a1871-4d1b-4958-95aa-8b6de18d34d7fileName">CC31538-JMS-Config-VS-Issue-readyapi-project</con:setting>
  </con:settings>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer>
    <con:jmsConnection>
      <con:name>JMS1</con:name>
      <con:connectorLabel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
      <con:initialContextFactory>contextClassOneqqq</con:initialContextFactory>
      <con:providerUrl>file:/oneqqq</con:providerUrl>
      <con:connectionFactory>FactoryOneqq</con:connectionFactory>
      <con:username/>
      <con:password/>
      <con:extraProperties/>
    </con:jmsConnection>
    <con:jmsConnection>
      <con:name>JMS2</con:name>
      <con:connectorLabel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
      <con:initialContextFactory>contextClassTwo111</con:initialContextFactory>
      <con:providerUrl>file:/two111</con:providerUrl>
      <con:connectionFactory>1111</con:connectionFactory>
      <con:username/>
      <con:password/>
      <con:extraProperties/>
    </con:jmsConnection>
  </con:jmsConnectionContainer>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
